[tox]
envlist = py39, pep8
isolated_build = True

[testenv]
passenv = POSTGRES_*
deps =
    pytest-django
    poetry
skip_install = True
allowlist_externals = yarn
commands = 
    poetry install -v
    yarn install
    poetry run pytest -v {posargs}

[testenv:start]
deps = poetry
skip_install = True
commands = 
    poetry install -v
    poetry run python manage.py runserver {posargs}

[testenv:init-db]
deps = poetry
skip_install = True
commands = 
    poetry install -v
    poetry run python manage.py migrate
    poetry run python manage.py init_db {posargs}

[testenv:update-app]
passenv = ENV
deps = poetry
skip_install = True
allowlist_externals = bash
commands = 
    poetry install -v
    poetry run python manage.py migrate {posargs}
    bash -c 'if [[ $ENV = 'PRODUCTION' ]]; then poetry run python manage.py collectstatic; fi'

[testenv:pep8]
deps =
    black
    isort
    flake8
    poetry
skip_install = True
commands =
    poetry install -v
    poetry run black --check .
    poetry run isort --check .
    poetry run flake8

[testenv:coverage]
passenv = POSTGRES_* COVERALLS_REPO_TOKEN
allowlist_externals = bash
deps = 
    {[testenv]deps}
    coverage
    coveralls
commands =
    poetry install -v
    coverage run -m pytest
    coverage report
    coverage html
    bash -c 'if [ $COVERALLS_REPO_TOKEN ]; then coveralls; fi'

[pytest]
DJANGO_SETTINGS_MODULE = config.settings.ci
python_files = tests.py test_*.py *_tests.py test.py

[coverage:report]
omit = 
    .tox/*
    */migrations/*
    tests/*

[flake8]
max-line-length = 88
extend-ignore = E203, W503
exclude = .tox,migrations

[isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
skip = .tox,migrations
